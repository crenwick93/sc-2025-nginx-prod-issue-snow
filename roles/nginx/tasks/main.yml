- name: Ensure nginx is installed
  ansible.builtin.package:
    name: nginx
    state: present

- name: Set login banner for nginx server
  become: true
  ansible.builtin.copy:
    dest: /etc/motd
    content: |
      ##################################################
      #  Welcome to the PRODUCTION NGINX Server
      #  Authorized access only!
      #  Unauthorized use will be monitored and reported.

           _  _     ___     ___    ____   __  __
          | \| |   / __|   |_ _|  | \| |  \ \/ /
          | .` |  | (_ |    | |   | .` |   >  <
          |_|\_|   \___|   |___|  |_|\_|  /_/\_\
          _|"""""|_|"""""|_|"""""|_|"""""|_|"""""|
          "`-0-0-'"`-0-0-'"`-0-0-'"`-0-0-'"`-0-0-'


      ##################################################
    owner: root
    group: root
    mode: '0644'

- name: Create certificate storage directory
  ansible.builtin.file:
    path: /var/certificates
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Copy backup TLS certificate to /var/certificates
  ansible.builtin.copy:
    src: cert.crt
    dest: /var/certificates/cert.crt
    owner: root
    group: root
    mode: '0644'

- name: Copy backup TLS key to /var/certificates
  ansible.builtin.copy:
    src: cert.key
    dest: /var/certificates/cert.key
    owner: root
    group: root
    mode: '0600'

- name: Create SSL directory
  ansible.builtin.file:
    path: /etc/nginx/ssl
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Copy TLS certificate from /var/certificates
  ansible.builtin.copy:
    src: "{{ nginx_ssl_cert_src }}"
    dest: /etc/nginx/ssl/server.crt
    remote_src: true
    mode: '0644'
  notify: reload nginx

- name: Copy TLS key from /var/certificates
  ansible.builtin.copy:
    src: "{{ nginx_ssl_key_src }}"
    dest: /etc/nginx/ssl/server.key
    remote_src: true
    mode: '0600'
  notify: reload nginx

- name: Deploy nginx SSL config
  ansible.builtin.template:
    src: ssl.conf.j2
    dest: /etc/nginx/conf.d/ssl.conf
    mode: '0644'
  notify: reload nginx

- name: Deploy HTML landing page
  ansible.builtin.copy:
    dest: /usr/share/nginx/html/index.html
    content: |
      <html>
        <head><title>Demo App</title></head>
        <body>
          <h1 style="text-align:center; margin-top:20%;">This is Production App</h1>
          <div style="text-align:center;"><img src="https://picsum.photos/400" /></div>
        </body>
      </html>
    mode: '0644'
  notify: reload nginx

- name: Start and enable nginx
  ansible.builtin.service:
    name: nginx
    state: started
    enabled: true

- name: Ensure nginx backup directory exists
  ansible.builtin.file:
    path: /var/backups/nginx
    state: directory
    owner: root
    group: root
    mode: '0755'

- name: Backup baseline nginx main configuration
  ansible.builtin.copy:
    src: /etc/nginx/nginx.conf
    dest: /var/backups/nginx/nginx.conf.bak
    remote_src: true
    owner: root
    group: root
    mode: '0644'

- name: Check if nginx SSL config exists
  ansible.builtin.stat:
    path: /etc/nginx/conf.d/ssl.conf
  register: ssl_conf_stat

- name: Backup baseline nginx SSL configuration if present
  ansible.builtin.copy:
    src: /etc/nginx/conf.d/ssl.conf
    dest: /var/backups/nginx/ssl.conf.bak
    remote_src: true
    owner: root
    group: root
    mode: '0644'
  when: ssl_conf_stat.stat.exists
